apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "api-gateway.fullname" . }}
  labels:
    {{- include "api-gateway.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "api-gateway.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "api-gateway.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "api-gateway.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ include "api-gateway.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.config.server.port }}
              protocol: TCP
          env:
            {{- range .Values.env }}
            - name: {{ .name }}
              value: {{ .value | quote }}
            {{- end }}
            - name: SPRING_CONFIG_LOCATION
              value: "classpath:/application.yml,/app/config/application-k8s.yml"
            {{- if .Values.redis.enabled }}
            - name: SPRING_REDIS_HOST
              value: {{ .Values.redis.host | quote }}
            - name: SPRING_REDIS_PORT
              value: {{ .Values.redis.port | quote }}
            {{- end }}
            {{- if .Values.kafka.enabled }}
            - name: KAFKA_BOOTSTRAP_SERVERS
              value: {{ .Values.kafka.bootstrapServers | quote }}
            {{- end }}
            {{- if .Values.secrets.auth0.clientId }}
            - name: AUTH0_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ include "api-gateway.secretName" . }}
                  key: auth0-client-id
            - name: AUTH0_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "api-gateway.secretName" . }}
                  key: auth0-client-secret
            - name: AUTH0_ISSUER_URI
              valueFrom:
                secretKeyRef:
                  name: {{ include "api-gateway.secretName" . }}
                  key: auth0-issuer-uri
            - name: AUTH0_AUDIENCE
              valueFrom:
                secretKeyRef:
                  name: {{ include "api-gateway.secretName" . }}
                  key: auth0-audience
            {{- end }}
          {{- if .Values.healthcheck.enabled }}
          livenessProbe:
            {{- toYaml .Values.healthcheck.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.healthcheck.readinessProbe | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: /app/config
              readOnly: true
            - name: logs
              mountPath: /app/logs
      volumes:
        - name: config
          configMap:
            name: {{ include "api-gateway.configMapName" . }}
        - name: logs
          emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}